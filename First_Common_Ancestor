public class Solution {
	
  //this is to find out LCA in a binary tree
  public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
    if(root == null)
      return null;
    if(root == p || root == q)
      return root;
    TreeNode left = lowestCommonAncestor(root.left, p, q);
    TreeNode right = lowestCommonAncestor(root.right, p, q);

    if(left != null && right != null)
      return root;
    else if(left == null && right != null)
      return right;
    else if (right == null && left != null)
      return left;
    else 
      return null;
  }
  
  //This is to find out LCA in a binary search tree
  public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q){
    if(root == null)
      return null;
    if( root.val < p.val &&  root.val < q.val)
      return lowestCommonAncestor(root.right, p, q);
    if(root.val > p.val && root.val > q.val)
      return lowestCommonAncestor(root.left, p, q);
    else
      return root;
  }
}
